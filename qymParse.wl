(* ::Package:: *)

parse[filename_,"qym"]:=Module[
	{
		i,j,k,
		filedata,midchar,
		music,musicrepeat,musicclip,voicepart,track,
		instrument="Piano",instrumentList={},
		tonality=0,beat=1,speed=88,volume=1,
		pitch,sharp=0,time,space,tercet=0,tercetTime,
		repeatTime,chord=False,extend,lastPitch,
		comment,match,timeDot,note,duration,frequency
	},
	If[!FileExistsQ[filename],
		MessageDialog[TextCell["File not found!"],WindowTitle->"Error"];
		Return[];
	];
	filedata=StringJoin/@Map[ToString,Import[filename,"Table"],{2}];
	Do[
		match=StringPosition[filedata[[i]],"//",1];
		If[match!={},
			If[match[[1,1]]==1,
				filedata[[i]]="",
				filedata[[i]]=StringTake[filedata[[i]],match[[1,1]]-1];
			];
		];
	,{i,Length[filedata]}];
	filedata=Cases[filedata,Except[""]];
	If[StringTake[filedata[[1]],-1]==">",
		midchar=filedata[[1]];
		filedata=Delete[filedata,1];
		filedata=StringJoin[midchar,#]&/@filedata;
	];
	track={};
	Do[
		j=1;
		voicepart={};
		musicrepeat={};
		musicclip={};
		While[j<=StringLength[filedata[[i]]],
			midchar=StringTake[filedata[[i]],{j}];
			If[MemberQ[{"0","1","2","3","4","5","6","7"},midchar],
				note=ToExpression@midchar;
				extend=False;
				time=1;
				If[chord,
					AppendTo[pitch,pitchDict[[note]]+tonality+sharp];
					chord=False,
					pitch=If[note==0,None,pitchDict[[note]]+tonality+sharp]
				];
				sharp=0;
				If[lastPitch==pitch && space==False,extend=True];
				space=True;
				j++;
				midchar=StringTake[filedata[[i]],{j}];
				While[j<=StringLength[filedata[[i]]] && MemberQ[{"-","_","'",",",".","^","&"},midchar],
					Switch[midchar,
					"-",
						time+=1,
					"_",
						time/=2,
					"'",
						pitch+=12,
					",",
						pitch-=12,
					".",
						timeDot=1/2;
						While[j<=StringLength[filedata[[i]]] && StringTake[filedata[[i]],{j+1}]==".",
							timeDot/=2;
							j++;
						];
						time*=(2-timeDot),
					"^",
						space=False,
					"&",
						chord=True;
						If[!ListQ[pitch],pitch={pitch}]
					];
					j++;
					midchar=StringTake[filedata[[i]],{j}];
				];
				If[!chord,
					If[tercet>0,
						time*=tercetTime;
						tercet--;
					];
					duration=60/speed*time*beat;
					lastPitch=pitch;
					If[extend,
						If[space,
							musicclip[[-1,2]]+=duration*7/8;
							AppendTo[musicclip,{None,duration/8}],
							musicclip[[-1,2]]+=duration;
						],
						If[space,
							AppendTo[musicclip,{pitch,duration*7/8,instrument}];
							AppendTo[musicclip,{None,duration/8}],
							AppendTo[musicclip,{pitch,duration,instrument}];
						];
					];
				],
				Switch[midchar,
				"#",
					sharp++,
				"b",
					sharp--,
				"<",
					match=Select[Transpose[StringPosition[filedata[[i]],">"]][[1]],#>j&][[1]];
					comment=StringTake[filedata[[i]],{j+1,match-1}];
					Switch[StringTake[comment,{2}],
					"=",
						tonality=tonalityDict[[StringTake[comment,{3,StringLength@comment}]]],
					"/",
						beat=ToExpression[StringTake[comment,{3}]]/4,
					_,
						If[StringTake[comment,-1]=="%",
							volume=ToExpression[StringTake[comment,StringLength[comment]-1]]/100,
							speed=ToExpression[comment];
						];
					];
					j=match,
				"(",
					match=Select[Transpose[StringPosition[filedata[[i]],")"]][[1]],#>j&][[1]];
					comment=StringTake[filedata[[i]],{j+1,match-1}];
					tercet=ToExpression[comment];
					tercetTime=(2^Floor[Log2[tercet]])/tercet;
					j=match,
				"{",
					match=Select[Transpose[StringPosition[filedata[[i]],"}"]][[1]],#>j&][[1]];
					instrument=StringTake[filedata[[i]],{j+1,match-1}];
					instrumentList=Union[instrumentList,{instrument}];
					j=match,
				":",
					If[StringTake[filedata[[i]],{j+1}]=="|",
						If[musicrepeat=={},
							voicepart=Join[voicepart,musicclip];
							voicepart=Join[voicepart,musicclip];
							musicclip={},
							Do[
								voicepart=Join[voicepart,musicclip];
								voicepart=Join[voicepart,musicrepeat];
							,{k,repeatTime}];
							repeatTime=0;
							musicclip={}
						],
						voicepart=Join[voicepart,musicclip];
						musicclip={};
						musicrepeat={}
					],
				"[",
					match=Select[Transpose[StringPosition[filedata[[i]],"]"]][[1]],#>j&][[1]];
					repeatTime=StringCount[StringTake[filedata[[i]],{j+1,match-1}],"."];
					If[StringTake[filedata[[i]],{j+1,j+2}]=="1.",
						voicepart=Join[voicepart,musicclip];
						musicrepeat=musicclip;
						musicclip={};
					];
					j=match
				];
				j++;
			];	
		];
		voicepart=Join[voicepart,musicclip];
		If[voicepart!={},AppendTo[track,volume*Audio[Sound[SoundNote@@#&/@voicepart]]]],
	{i,Length[filedata]}];
	music=AudioOverlay@track;
	Return[Audio[music,MetaInformation-><|
		"Format"->"qym",
		"TrackCount"->Length@track,
		"Duration"->QuantityMagnitude@UnitConvert[Duration@music,"Seconds"],
		"Instruments"->instrumentList
	|>]];
]
